seed: 32
indv_eps: 40       # episodes per individual
env_name: 'Walker-v0'
shape: [5, 5]

fitness_type: "reward"
rewardDomain: [-1., 10.]

features_list: ["baseLength", "emptiness"]
lengthDomain: [1, 5]
heightDomain: [1, 5]
baseLengthDomain: [0, 5]
emptinessDomain: [0., 1.]
compactnessDomain: [0., 1.]
elongationDomain: [0., 1.]

containers:
    cont0:
        type: Grid                       # The type of the container (e.g. Grid, CVTGrid, Container, NoveltyArchive, ...)
        name: cont0                      # The name of the container. Optional. Default to the parent key (here also 'cont0')
        shape: [5, 5]                  # The number of bins for each feature
        max_items_per_bin: 1             # The number of items in each bin of the grid

main_algorithm_name: algoTotal

# The list of all algorithms
algorithms:
    # Default parameter values for each algorithm
    optimisation_task: max            # maximisation of all fitness objectives
    dimension: 2804                   # The number of dimensions of the problem
    ind_domain: [0., 1.]              # The domain of each value of the genome (optional)
    container: cont0                  # The container to use to store individuals told to the optimisers

    # first explore the feature landscape by random search
    algoInit:
        type: RandomUniform 
        budget: 1000        # The total number of allowed evaluations

    algoQD:
        type: RandomSearchMutPolyBounded    # In realt√† viene applicata la mutazione proposta da evogym (algo_utils.py)
        budget: 500                           # The total number of allowed evaluations
    
    # All described algorithms are placed in a Sequence (Sq) of algorithms to execute them one after the other
    algoTotal:
        type: Sq
        algorithms: ['algoInit', 'algoQD'] # The list of algorithms to execute
        tell_container_when_switching: only_best